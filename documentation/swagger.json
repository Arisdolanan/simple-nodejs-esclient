{
  "openapi": "3.0.1",
  "info": {
    "title": "simple-express-sequelize",
    "description": "This is a documentation API",
    "contact": {
      "email": "https://www.example.co.id/"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "masteruser",
      "description": "Operations about master user"
    }
  ],
  "paths": {
    "/api/mstusers": {
      "get": {
        "tags": ["masteruser"],
        "summary": "Get list of users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["masteruser"],
        "summary": "Create a user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mstusersDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/mstusers/{id}": {
      "get": {
        "tags": ["masteruser"],
        "summary": "Get a user by id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a user",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["masteruser"],
        "summary": "Update a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of a user to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mstusersDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["masteruser"],
        "summary": "Delete a user",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of user to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "Invalid id supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "mstusersDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fullname": {
            "type": "string"
          },
          "role_id": {
            "type": "integer"
          },
          "user_type": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "signature_path": {
            "type": "string"
          },
          "last_login": {
            "type": "string"
          },
          "created_by": {
            "type": "integer"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },

          "fullname": {
            "type": "string"
          },
          "role_id": {
            "type": "integer"
          },
          "user_type": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "signature_path": {
            "type": "string"
          },
          "last_login": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "last_update": {
            "type": "string"
          },
          "create_date": {
            "type": "string"
          },
          "updated_date": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
